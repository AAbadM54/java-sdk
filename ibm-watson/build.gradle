plugins {
    id 'ru.vyarus.animalsniffer' version '1.3.0'
}

defaultTasks 'clean'

apply from: '../utils.gradle'
import org.apache.tools.ant.filters.*

apply plugin: 'java'
apply plugin: 'ru.vyarus.animalsniffer'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

project.tasks.assemble.dependsOn project.tasks.shadowJar

shadowJar {
   classifier = 'jar-with-dependencies'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

repositories {
    maven { url = "http://repo.maven.apache.org/maven2" }
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

signing {
    sign configurations.archives
}

signArchives {
    onlyIf { Task task ->
        def shouldExec = false
        for (myArg in project.gradle.startParameter.taskRequests[0].args) {
            if (myArg.toLowerCase().contains('signjars') || myArg.toLowerCase().contains('uploadarchives')) {
                shouldExec = true
            }
        }
        return shouldExec
    }
}

checkstyleTest {
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.file('checkstyle.xml')
    ignoreFailures = false
}

task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

configurations {
    tests
}

artifacts {
    tests testJar
}

dependencies {
    compile project(':assistant')
    compile project(':compare-comply')
    compile project(':conversation')
    compile project(':core')
    compile project(':discovery')
    compile project(':language-translator')
    compile project(':natural-language-classifier')
    compile project(':natural-language-understanding')
    compile project(':personality-insights')
    compile project(':speech-to-text')
    compile project(':text-to-speech')
    compile project(':tone-analyzer')
    compile project(':visual-recognition')

    signature 'org.codehaus.mojo.signature:java17:1.0@signature'

}

processResources {
    filter ReplaceTokens, tokens: [
            "pom.version": project.version,
            "build.date" : getDate()
    ]
}

apply from: rootProject.file('.utility/bintray-properties.gradle')
